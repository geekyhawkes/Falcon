# This file contains pin mappings for the Creality Ender 5 Plus.
# Ender 5 Plus stock uses a Creality v2.2 board, similar to CR-20 Pro.
# To use this config, the firmware should be compiled for the AVR
# atmega2560.

# See docs/Config_Reference.md for a description of parameters.
[include ./KAMP/*.cfg]
[include Adaptive_Meshing.cfg]
[include Line_Purge.cfg]

[virtual_sdcard]
path: ~/gcode_files

[exclude_object]

[idle_timeout]
timeout: 1800
gcode:
    {% if printer.pause_resume.is_paused %}
    M118 Idle Timeout reached
    M117 Disable hotend_fan
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    STATUS_READY
    {% else %}
    #SLEEP
    {% endif %}

[temperature_sensor raspberry_pi_3B]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[display_status]

[gcode_macro START_PRINT]
# variable_bed_temp: 60
# variable_ext_temp: 205
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP} # set extruder and wait
    # Use absolute coordinates
    G90
    # Home the printer
    G92 E0 ;Reset Extruder
    G1 E-1 F2700
    G28
    BED_MESH_CALIBRATE
    M109 S{EXTRUDER_TEMP} # set extruder and wait
    M190 S{BED_TEMP} #wait for bed temp
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    #PURGE_LINE
    Line_Purge
    
[gcode_macro PURGE_LINE]
gcode:
    # Test Line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X1.1 Y30 Z0.0 F5000.0 ;Move to start position
    G1 X1.1 Y320.0 Z0.0 F1500.0 E15 ;Draw the first line
    G1 X1.4 Y320.0 Z0.0 F5000.0 ;Move to side a little
    G1 X1.4 Y30 Z0.0 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

######################################################################
# Filament Change
######################################################################
# After filament has been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M0]
gcode:
    PAUSE

[gcode_arcs]
#resolution: 1.0

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}    

[gcode_macro HEAT_EXTRUDER]
gcode:
    M109 S{210}

[gcode_macro HEAT_BED]
gcode:
    M190 S{60}    

[gcode_macro HEAT_BOTH]
gcode:
    M140 S{60}
    M104 S{215}

[gcode_macro STARTUP]
gcode:
    G28
    M190 S{60}
    Z_TILT_ADJUST
    M104 S{215}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount   
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(0.5)|int %}                                          ; hotend prime amount (in mm)    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-150 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M0] 
gcode: 
    PAUSE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  #Move nozzle away from print in Z
  G91
  G1 Z10 F3000
  END_PRINT

[gcode_macro END_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x-5|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y-5|default(100)|float %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Retract a bit, drop, retract bit more
    G91
    G92 E0 ;Reset Extruder
    G1 E-2 F2700
    G1 Z10 F3000
#    G1 E-2 Z0.2 F2400
    # Move nozzle away from print while retracting
    G90
    G1 X{X_MAX} Y{Y_MAX} E-3 F3000
    # Disable steppers
    M84

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1   

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    220, 190, 20

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 350
position_min: 0
position_max: 350
homing_speed: 120

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 350
position_min: 0
position_max: 350
homing_speed: 120

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_max: 410
position_min: -6
homing_speed: 10.0

[stepper_z1]
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
microsteps: 16
rotation_distance: 4

[extruder]
max_extrude_cross_section: 5
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
rotation_distance: 29.78
microsteps: 16
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 275
pressure_advance = 0.040

[safe_z_home]
home_xy_position: 220, 190
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]
sensor_pin: ^PD3
control_pin: PB5
x_offset: -44
y_offset: -17
#z_offset: 0
speed: 4.0
pin_up_touch_mode_reports_triggered: False

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 300, 330
probe_count: 5, 5
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1
fade_end: 10

[z_tilt]
z_positions: 378, 190
          -59, 190
points: 350, 190
          59, 190
speed: 150
horizontal_move_z: 5
retries: 10
retry_tolerance: .0050

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: pid
#pid_Kp: 690.34
#pid_Ki: 111.47
#pid_Kd: 1068.83
min_temp: 0
max_temp: 130

[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0KDWRF-if00-port0

[filament_switch_sensor filament_sensor]
switch_pin:PE4

[input_shaper]
shaper_freq_x: 80.0
shaper_type_x: 3hump_ei
shaper_freq_y: 49.4
shaper_type_y: 2hump_ei

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 4000
# max_accel_to_decel:3000
max_z_velocity: 10
max_z_accel: 100

[screws_tilt_adjust]
screw1: 70, 58
screw1_name: front left screw
screw2: 350, 58
screw2_name: front right screw
screw3: 350, 312
screw3_name: rear right screw
screw4: 70, 312
screw4_name: rear left screw
horizontal_move_z: 5.
speed: 50.
screw_thread: CW-M3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.008
#*# pid_ki = 1.717
#*# pid_kd = 98.504
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.405
#*# pid_ki = 0.745
#*# pid_kd = 1434.817
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.108750, -0.102500, -0.132500, -0.075000, -0.003750
#*# 	  0.061250, -0.023750, -0.052500, -0.026250, 0.032500
#*# 	  0.067500, 0.007500, -0.010000, -0.011250, 0.036250
#*# 	  0.068750, -0.017500, -0.067500, -0.043750, 0.022500
#*# 	  -0.056250, -0.125000, -0.191250, -0.162500, -0.095000
#*# tension = 0.2
#*# min_x = 10.96
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 14.3
#*# x_count = 5
#*# max_y = 329.98
#*# mesh_x_pps = 2
#*# max_x = 299.96
#*#
#*# [bltouch]
#*# z_offset = 2.660
